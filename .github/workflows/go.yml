# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:

  build:
    name: build app
    strategy:
      fail-fast: true
      matrix:
        os: [ windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      app_name: app_${{ matrix.os }}.o
      app_name_exe: app_${{ matrix.os }}.o
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 'stable'

    - name: Build
      run: |
          go mod tidy
          go build -v ./...
    
    - name: Lint
      continue-on-error: true
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: .

    - name: Test
      run: |
          go mod tidy
          go test  -v -race -coverpkg=./... ./...
    
    - name: Build Object Main
      if: matrix.os != 'windows-latest'
      run: |
          go mod tidy
          go build -o ${{ env.app_name }} cmd/main/main.go
    
    - name: Build Executable Main
      if: matrix.os == 'windows-latest'
      run: |
          go mod tidy
          go build -o ${{ env.app_name_exe }} cmd/main/main.go
          
    - name: Upload an Object
      uses: actions/upload-artifact@v3.1.2
      with:
        name: app_matrix
        path: ${{ env.app_name }}
        retention-days: 5
        
    - name: Upload an Executable
      uses: actions/upload-artifact@v3.1.2
      with:
        name: app_matrix
        path: ${{ env.app_name_exe }}
        retention-days: 5
